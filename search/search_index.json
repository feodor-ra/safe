{"config":{"lang":["en"],"separator":"[\\s\\-]+","pipeline":["stopWordFilter"]},"docs":[{"location":"","title":"safe-returns documentation","text":""},{"location":"#_1","title":"\u0420\u0443\u0441\u0441\u043a\u0438\u0439","text":"<p>\u0414\u043e\u043a\u0443\u043c\u0435\u043d\u0442\u0430\u0446\u0438\u044f \u0434\u043e\u0441\u0442\u0443\u043f\u043d\u0430 \u043d\u0430 \u0420\u0443\u0441\u0441\u043a\u043e\u043c \u0438 \u0430\u043d\u0433\u043b\u0438\u0439\u0441\u043a\u043e\u043c \u044f\u0437\u044b\u043a\u0435.</p>"},{"location":"#english","title":"English","text":"<p>You can read this documentation in Russian or English.</p>"},{"location":"en/","title":"Safe Returns","text":"<p>A decorator for transforming the output type of a function into an algebraic data type, combining it with possible exception types.</p> <p>The main goal of this package is to explicitly define the exception types a function can raise and track them using type checkers.</p> <p>The package provides two decorators: <code>@safe</code> and <code>@async_safe</code> for functions and coroutines, respectively.</p> <p>The decorator offers a convenient mechanism to specify exception types that may occur during function execution. This simplifies writing exception-handling code by leveraging IDE hints and type checkers, eliminating the need to examine the implementation of the called function to determine possible exceptions.</p>"},{"location":"en/#key-features","title":"Key Features","text":"<ul> <li>The package supports decorating functions and coroutines.</li> <li>The function result is wrapped in a <code>Success</code> object to distinguish between an exception and a returned value, such as one from an exception factory.</li> <li>Extensive type-specification mechanisms. Using the or operator (<code>|</code>), akin to <code>UnionType</code>, you can list specific types, pass collections constructed at runtime, or use similarly decorated functions.</li> <li>The generative typing mechanism does not limit the number of exception types that the type checker can recognize.</li> <li>Uses pure Python for typing and does not rely on additional dependencies.</li> </ul>"},{"location":"en/#requirements","title":"Requirements","text":"<p>Requires <code>Python &gt;= 3.11</code>.</p>"},{"location":"en/#installation","title":"Installation","text":"<p>Install from PyPI: safe-returns.</p> pippoetryuv <pre><code>pip install safe-returns\n</code></pre> <pre><code>poetry add safe-returns\n</code></pre> <pre><code>uv add safe-returns\n</code></pre>"},{"location":"en/#examples","title":"Examples","text":"<p>When using pattern matching, you will receive a warning if <code>KeyError</code> is not handled.</p> <pre><code>from safe import safe, Success, Failure\n\n@safe @ ValueError | KeyError\ndef foo() -&gt; int | str: ...\n\n\nmatch foo():\n    case Success(value=int()):\n        print(\"It's int\")\n    case Success(value=str()):\n        print(\"It's str\")\n    case Failure(error=ValueError()):\n        print(\"Catch ValueError\")\n</code></pre> <p>For more examples, see Features.</p>"},{"location":"en/#license","title":"License","text":"<p>This project is distributed under the MIT License.</p>"},{"location":"en/features/","title":"Features","text":""},{"location":"en/features/#basic-usage","title":"Basic Usage","text":"<pre><code>from safe import safe\n\n@safe @ ValueError\ndef foo(a: int) -&gt; str:\n    if a &lt; 0:\n        raise ValueError\n    return f\"Hello {a} times\"\n</code></pre> <p>The entry point is the <code>@safe</code> decorator, where the exception types that may occur should be specified after the <code>@</code>.</p> <p>The resulting function will have the following type:</p> <pre><code>foo(42) # -&gt; Success[str] | Failure[str, ValueError]\n</code></pre> <p>Subsequent work with the function result involves type refinement:</p> <pre><code>from safe import Success, Failure\n\nif isinstance(result := foo(42), Success):\n    print(result.value)\nelse:\n    print(\"We encountered an error!\", result.error)\n</code></pre>"},{"location":"en/features/#specifying-exceptions","title":"Specifying Exceptions","text":"<p>The specified exceptions will be guaranteed to be caught, including their subclasses. However, exceptions that are not specified will not be caught and will propagate upwards:</p> <pre><code>from safe import safe\n\n@safe @ TypeError\ndef foo():\n    raise ValueError\n\ntry:\n    result = foo()\nexcept ValueError:\n    print(\"Caught an unregistered exception\")\n</code></pre> <p>The concept here is simple: anything not explicitly specified by the developer as expected is treated as unexpected behavior. Such exceptions are considered program errors that should either terminate the program or be caught at a high level if further execution is possible.</p>"},{"location":"en/features/#without-specification","title":"Without Specification","text":"<p>The decorator can be used without specifying exception types. In this case, it will only wrap results in the <code>Success</code> data class.</p> <p>This ensures consistency in the code approach.</p> <pre><code>from safe import safe\n\n@safe\ndef foo() -&gt; float:\n    return 3.22\n\nfoo() # -&gt; Success[float]\n</code></pre>"},{"location":"en/features/#specifying-multiple-types","title":"Specifying Multiple Types","text":""},{"location":"en/features/#using-pipe","title":"Using Pipe (<code>|</code>)","text":"<p>Exception types can be explicitly specified using the or operator <code>|</code>.</p> <pre><code>from safe import safe\n\n@safe @ KeyError | ValueError\ndef foo() -&gt; int: ...\n</code></pre>"},{"location":"en/features/#using-a-collection","title":"Using a Collection","text":"<p>You can also specify exception types by passing an iterable, provided its types are analyzable by the type checker.</p> <pre><code>from safe import safe\n\nexc_types = (KeyError, ValueError, TypeError)\n\n@safe @ exc_types\ndef foo() -&gt; int: ...\n</code></pre>"},{"location":"en/features/#using-a-decorated-function","title":"Using a Decorated Function","text":"<p>You can also specify another function that has been decorated with <code>@safe</code>.</p> <pre><code>from safe import safe\n\n@safe @ KeyError\ndef foo() -&gt; int: ...\n\n@safe @ foo\ndef bar() -&gt; float: ...\n</code></pre>"},{"location":"en/features/#combining-them-all","title":"Combining Them All","text":"<p>Using or <code>|</code>, you can combine all of these approaches, passing any number of iterables, explicit types, and other functions.</p> <pre><code>from safe import safe\n\nexc_types = (ValueError, TypeError)\n\n@safe @ KeyError | exc_types\ndef foo() -&gt; int: ...\n\n@safe @ foo | IndexError\ndef bar() -&gt; int: ...\n\n@safe @ foo | bar | (AssertionError, ) | ArithmeticError\ndef zoo() -&gt; int: ...\n</code></pre> <p>If types are repeated in the combination, the type checker will correctly recognize only one instance.</p>"},{"location":"en/features/#working-with-results","title":"Working with Results","text":""},{"location":"en/features/#unsafe-usage","title":"Unsafe Usage","text":"<p>Both <code>Success</code> and <code>Failure</code> have a property <code>unsafe</code>, which is typed as the function's <code>returns_type</code>. However, calling it on a <code>Failure</code> will raise the captured exception.</p> <p>This can be used when one safe function calls another and does not handle its exceptions, leaving this responsibility to higher-level code.</p> <pre><code>from safe import safe\n\n@safe @ ValueError\ndef foo(a: int) -&gt; str:\n    if a &lt; 0:\n        raise ValueError\n    return f\"It's {a}\"\n\n\n@safe @ foo\ndef bar(a: int) -&gt; list[str]:\n    return [foo(a).unsafe]\n</code></pre>"},{"location":"en/features/#utilities-is_success-and-is_failure","title":"Utilities <code>is_success</code> and <code>is_failure</code>","text":"<p>The library provides <code>is_success</code> and <code>is_failure</code> utilities for convenience and to avoid repeated checks.</p> <pre><code>if isinstance(result := foo(5), Success):\n    ...\n\n\nfrom safe import is_success, is_failure\n\nif is_success(result := foo(5)):\n    ...\nelse:\n    ...\n\nif is_failure(result := foo(0)):\n    ...\nelse:\n    ...\n</code></pre> <p>These utilities serve as <code>TypeGuard</code> checks for <code>isinstance</code>.</p>"},{"location":"en/features/#utility-registered","title":"Utility registered","text":"<p>The library provides the registered utility, which allows retrieving the registered exception types for a decorated function.</p> <pre><code>from safe import registered, safe\n\n@safe @ ValueError | KeyError\ndef foo() -&gt; None: ...\n\nregistered(foo) # {KeyError, ValueError}\n</code></pre>"},{"location":"en/features/#pattern-matching","title":"Pattern Matching","text":"<p>The full potential of this approach is revealed when used in conjunction with the <code>match case</code> construct:</p> <pre><code>from safe import safe, Success, Failure\n\n@safe @ ValueError | KeyError\ndef foo() -&gt; int | str: ...\n\n\nmatch foo():\n    case Success(value=int()):\n        print(\"It's int\")\n    case Success(value=str()):\n        print(\"It's str\")\n    case Failure(error=ValueError()):\n        print(\"Caught ValueError\")\n</code></pre> <p>From the code, it is evident that the <code>KeyError</code> exception is not handled, and this will be detected by the type checker (pyright or mypy), flagging it with a <code>reportMatchNotExhaustive</code> error.</p> <p>You can resolve this by adding its handling or propagating it upwards:</p> <pre><code>match foo():\n    case Success(value=int() as value):\n        print(f\"It's int {value=}\")\n    case Success(value=str() as value):\n        print(f\"It's str {value=}\")\n    case Failure(error=ValueError()):\n        print(\"Caught ValueError\")\n    case Failure(error as error):\n        raise error\n</code></pre>"},{"location":"en/features/#asynchronous-support","title":"Asynchronous Support","text":"<p>To decorate coroutines, use the separate <code>@async_safe</code> decorator.</p> <pre><code>from safe import async_safe\n\n\n@async_safe @ ValueError\nasync def foo(a: int) -&gt; str: ...\n\n\nfoo # (int) -&gt; Coroutine[Any, Any, Success[str] | Failure[str, ValueError]]\n</code></pre>"},{"location":"ru/","title":"safe-returns","text":"<p>\u0414\u0435\u043a\u043e\u0440\u0430\u0442\u043e\u0440 \u0434\u043b\u044f \u043f\u0440\u0435\u043e\u0431\u0440\u0430\u0437\u043e\u0432\u0430\u043d\u0438\u044f \u0432\u044b\u0445\u043e\u0434\u043d\u043e\u0433\u043e \u0442\u0438\u043f\u0430 \u0434\u0430\u043d\u043d\u044b\u0445 \u0444\u0443\u043d\u043a\u0446\u0438\u0438 \u0432 \u0430\u043b\u0433\u0435\u0431\u0440\u0430\u0438\u0447\u0435\u0441\u043a\u0438\u0439 \u0442\u0438\u043f \u0434\u0430\u043d\u043d\u044b\u0445, \u0441\u043e\u0432\u043c\u0435\u0449\u0430\u044f \u0435\u0433\u043e \u0441 \u0432\u043e\u0437\u043c\u043e\u0436\u043d\u044b\u043c\u0438 \u0442\u0438\u043f\u0430\u043c\u0438 \u0438\u0441\u043a\u043b\u044e\u0447\u0435\u043d\u0438\u0439.</p> <p>\u041e\u0441\u043d\u043e\u0432\u043d\u0430\u044f \u0446\u0435\u043b\u044c \u043f\u0430\u043a\u0435\u0442\u0430 \u2014 \u043f\u0440\u0435\u0434\u043e\u0441\u0442\u0430\u0432\u0438\u0442\u044c \u0432\u043e\u0437\u043c\u043e\u0436\u043d\u043e\u0441\u0442\u044c \u044f\u0432\u043d\u043e \u0443\u043a\u0430\u0437\u044b\u0432\u0430\u0442\u044c \u0442\u0438\u043f\u044b \u0438\u0441\u043a\u043b\u044e\u0447\u0435\u043d\u0438\u0439, \u043a\u043e\u0442\u043e\u0440\u044b\u0435 \u043c\u043e\u0436\u0435\u0442 \u0432\u044b\u0431\u0440\u0430\u0441\u044b\u0432\u0430\u0442\u044c \u0444\u0443\u043d\u043a\u0446\u0438\u044f, \u0438 \u043e\u0442\u0441\u043b\u0435\u0436\u0438\u0432\u0430\u0442\u044c \u0438\u0445 \u0441\u0440\u0435\u0434\u0441\u0442\u0432\u0430\u043c\u0438 \u0442\u0430\u0439\u043f-\u0447\u0435\u043a\u0435\u0440\u043e\u0432.</p> <p>\u041f\u0430\u043a\u0435\u0442 \u043f\u0440\u0435\u0434\u043e\u0441\u0442\u0430\u0432\u043b\u044f\u0435\u0442 \u0434\u0432\u0430 \u0434\u0435\u043a\u043e\u0440\u0430\u0442\u043e\u0440\u0430: <code>@safe</code> \u0438 <code>@async_safe</code> \u0434\u043b\u044f \u0444\u0443\u043d\u043a\u0446\u0438\u0439 \u0438 \u043a\u043e\u0440\u0443\u0442\u0438\u043d \u0441\u043e\u043e\u0442\u0432\u0435\u0442\u0441\u0442\u0432\u0435\u043d\u043d\u043e.</p> <p>\u0414\u0435\u043a\u043e\u0440\u0430\u0442\u043e\u0440 \u043f\u0440\u0435\u0434\u043e\u0441\u0442\u0430\u0432\u043b\u044f\u0435\u0442 \u0443\u0434\u043e\u0431\u043d\u044b\u0439 \u043c\u0435\u0445\u0430\u043d\u0438\u0437\u043c \u0443\u043a\u0430\u0437\u0430\u043d\u0438\u044f \u0442\u0438\u043f\u043e\u0432 \u0438\u0441\u043a\u043b\u044e\u0447\u0435\u043d\u0438\u0439, \u043a\u043e\u0442\u043e\u0440\u044b\u0435 \u043c\u043e\u0433\u0443\u0442 \u0432\u043e\u0437\u043d\u0438\u043a\u043d\u0443\u0442\u044c \u0432 \u0445\u043e\u0434\u0435 \u0440\u0430\u0431\u043e\u0442\u044b \u0444\u0443\u043d\u043a\u0446\u0438\u0438. \u042d\u0442\u043e \u043f\u043e\u0437\u0432\u043e\u043b\u044f\u0435\u0442 \u0443\u043f\u0440\u043e\u0441\u0442\u0438\u0442\u044c \u043d\u0430\u043f\u0438\u0441\u0430\u043d\u0438\u0435 \u043a\u043e\u0434\u0430 \u043e\u0431\u0440\u0430\u0431\u043e\u0442\u043a\u0438 \u0442\u0430\u043a\u0438\u0445 \u0438\u0441\u043a\u043b\u044e\u0447\u0435\u043d\u0438\u0439, \u0438\u0441\u043f\u043e\u043b\u044c\u0437\u0443\u044f \u043f\u043e\u0434\u0441\u043a\u0430\u0437\u043a\u0438 IDE \u0438 \u0442\u0430\u0439\u043f-\u0447\u0435\u043a\u0435\u0440\u0430, \u0430 \u0442\u0430\u043a\u0436\u0435 \u0438\u0437\u0431\u0435\u0433\u0430\u044f \u043d\u0435\u043e\u0431\u0445\u043e\u0434\u0438\u043c\u043e\u0441\u0442\u0438 \u043f\u0440\u043e\u0441\u043c\u043e\u0442\u0440\u0430 \u043a\u043e\u0434\u0430 \u0432\u044b\u0437\u044b\u0432\u0430\u0435\u043c\u043e\u0439 \u0444\u0443\u043d\u043a\u0446\u0438\u0438 \u0434\u043b\u044f \u043e\u043f\u0440\u0435\u0434\u0435\u043b\u0435\u043d\u0438\u044f \u0432\u043e\u0437\u043c\u043e\u0436\u043d\u044b\u0445 \u0441\u043b\u0443\u0447\u0430\u0435\u0432 \u0438\u0441\u043a\u043b\u044e\u0447\u0435\u043d\u0438\u0439.</p>"},{"location":"ru/#_1","title":"\u041a\u043b\u044e\u0447\u0435\u0432\u044b\u0435 \u043e\u0441\u043e\u0431\u0435\u043d\u043d\u043e\u0441\u0442\u0438","text":"<ul> <li>\u041f\u0430\u043a\u0435\u0442 \u043f\u043e\u0437\u0432\u043e\u043b\u044f\u0435\u0442 \u0434\u0435\u043a\u043e\u0440\u0438\u0440\u043e\u0432\u0430\u0442\u044c \u0444\u0443\u043d\u043a\u0446\u0438\u0438 \u0438 \u043a\u043e\u0440\u0443\u0442\u0438\u043d\u044b.</li> <li>\u0420\u0435\u0437\u0443\u043b\u044c\u0442\u0430\u0442 \u0444\u0443\u043d\u043a\u0446\u0438\u0438 \u043e\u0431\u043e\u0440\u0430\u0447\u0438\u0432\u0430\u0435\u0442\u0441\u044f \u0432 \u043e\u0431\u044a\u0435\u043a\u0442 <code>Success</code>, \u0447\u0442\u043e\u0431\u044b \u043e\u0442\u043b\u0438\u0447\u0438\u0442\u044c \u0432\u043e\u0437\u043d\u0438\u043a\u0448\u0435\u0435 \u0438\u0441\u043a\u043b\u044e\u0447\u0435\u043d\u0438\u0435 \u043e\u0442   \u0432\u043e\u0437\u0432\u0440\u0430\u0449\u0451\u043d\u043d\u043e\u0433\u043e \u0437\u043d\u0430\u0447\u0435\u043d\u0438\u044f, \u043d\u0430\u043f\u0440\u0438\u043c\u0435\u0440, \u0438\u0437 \u0444\u0430\u0431\u0440\u0438\u043a\u0438 \u0438\u0441\u043a\u043b\u044e\u0447\u0435\u043d\u0438\u0439.</li> <li>\u0428\u0438\u0440\u043e\u043a\u0438\u0439 \u043c\u0435\u0445\u0430\u043d\u0438\u0437\u043c \u0443\u043a\u0430\u0437\u0430\u043d\u0438\u044f \u0442\u0438\u043f\u043e\u0432. \u0418\u0441\u043f\u043e\u043b\u044c\u0437\u0443\u044f \u043e\u043f\u0435\u0440\u0430\u0442\u043e\u0440 \u0438\u043b\u0438 (<code>|</code>), \u0430\u043d\u0430\u043b\u043e\u0433\u0438\u0447\u043d\u044b\u0439 <code>UnionType</code>, \u043c\u043e\u0436\u043d\u043e   \u043f\u0435\u0440\u0435\u0447\u0438\u0441\u043b\u044f\u0442\u044c \u043a\u043e\u043d\u043a\u0440\u0435\u0442\u043d\u044b\u0435 \u0442\u0438\u043f\u044b, \u043f\u0435\u0440\u0435\u0434\u0430\u0432\u0430\u0442\u044c \u043a\u043e\u043b\u043b\u0435\u043a\u0446\u0438\u0438, \u0441\u043e\u0441\u0442\u0430\u0432\u043b\u0435\u043d\u043d\u044b\u0435 \u0432\u043e \u0432\u0440\u0435\u043c\u044f \u0432\u044b\u043f\u043e\u043b\u043d\u0435\u043d\u0438\u044f, \u0438\u043b\u0438   \u0437\u0430\u0434\u0435\u043a\u043e\u0440\u0438\u0440\u043e\u0432\u0430\u043d\u043d\u044b\u0435 \u0442\u0430\u043a\u0438\u043c \u043e\u0431\u0440\u0430\u0437\u043e\u043c \u0444\u0443\u043d\u043a\u0446\u0438\u0438.</li> <li>\u041f\u043e\u0440\u043e\u0436\u0434\u0430\u044e\u0449\u0438\u0439 \u043c\u0435\u0445\u0430\u043d\u0438\u0437\u043c \u0442\u0438\u043f\u0438\u0437\u0430\u0446\u0438\u0438 \u043d\u0435 \u043e\u0433\u0440\u0430\u043d\u0438\u0447\u0438\u0432\u0430\u0435\u0442 \u043a\u043e\u043b\u0438\u0447\u0435\u0441\u0442\u0432\u043e \u0442\u0438\u043f\u043e\u0432 \u0438\u0441\u043a\u043b\u044e\u0447\u0435\u043d\u0438\u0439, \u043a\u043e\u0442\u043e\u0440\u044b\u0435   \u043c\u043e\u0436\u0435\u0442 \u0440\u0430\u0441\u043f\u043e\u0437\u043d\u0430\u0432\u0430\u0442\u044c \u0442\u0430\u0439\u043f-\u0447\u0435\u043a\u0435\u0440.</li> <li>\u0418\u0441\u043f\u043e\u043b\u044c\u0437\u0443\u0435\u0442 \u0447\u0438\u0441\u0442\u044b\u0439 Python \u0434\u043b\u044f \u0442\u0438\u043f\u0438\u0437\u0430\u0446\u0438\u0438 \u0438 \u043d\u0435 \u0438\u043c\u0435\u0435\u0442 \u0434\u043e\u043f\u043e\u043b\u043d\u0438\u0442\u0435\u043b\u044c\u043d\u044b\u0445 \u0437\u0430\u0432\u0438\u0441\u0438\u043c\u043e\u0441\u0442\u0435\u0439.</li> </ul>"},{"location":"ru/#_2","title":"\u0417\u0430\u0432\u0438\u0441\u0438\u043c\u043e\u0441\u0442\u0438","text":"<p>\u0422\u0440\u0435\u0431\u0443\u0435\u0442\u0441\u044f \u0442\u043e\u043b\u044c\u043a\u043e <code>Python &gt;= 3.11</code>.</p>"},{"location":"ru/#_3","title":"\u0423\u0441\u0442\u0430\u043d\u043e\u0432\u043a\u0430","text":"<p>\u0423\u0441\u0442\u0430\u043d\u043e\u0432\u043a\u0430 \u0438\u0437 PyPI: safe-returns.</p> pippoetryuv <pre><code>pip install safe-returns\n</code></pre> <pre><code>poetry add safe-returns\n</code></pre> <pre><code>uv add safe-returns\n</code></pre>"},{"location":"ru/#_4","title":"\u041f\u0440\u0438\u043c\u0435\u0440\u044b","text":"<p>\u041f\u0440\u0438 \u0438\u0441\u043f\u043e\u043b\u044c\u0437\u043e\u0432\u0430\u043d\u0438\u0435 \u043f\u0430\u0442\u0442\u0435\u0440\u043d-\u043c\u0430\u0442\u0447\u0438\u043d\u0433\u0430 \u0431\u0443\u0434\u0435\u0442 \u0443\u043a\u0430\u0437\u0430\u043d\u043e \u0437\u0430\u043c\u0435\u0447\u0430\u043d\u0438\u0435 \u0447\u0442\u043e <code>KeyError</code> \u043d\u0435 \u043e\u0431\u0440\u0430\u0431\u0430\u0442\u044b\u0432\u0430\u0435\u0442\u0441\u044f.</p> <pre><code>from safe import safe, Success, Failure\n\n@safe @ ValueError | KeyError\ndef foo() -&gt; int | str: ...\n\n\nmatch foo():\n    case Success(value=int()):\n        print(\"It's int\")\n    case Success(value=str()):\n        print(\"It's str\")\n    case Failure(error=ValueError()):\n        print(\"Catch ValueError\")\n</code></pre> <p>\u0411\u043e\u043b\u044c\u0448\u0435 \u043f\u0440\u0438\u043c\u0435\u0440\u043e\u0432 \u0441\u043c. \u0412\u043e\u0437\u043c\u043e\u0436\u043d\u043e\u0441\u0442\u0438.</p>"},{"location":"ru/#_5","title":"\u041b\u0438\u0446\u0435\u043d\u0437\u0438\u044f","text":"<p>\u042d\u0442\u043e\u0442 \u043f\u0440\u043e\u0435\u043a\u0442 \u0440\u0430\u0441\u043f\u0440\u043e\u0441\u0442\u0440\u0430\u043d\u044f\u0435\u0442\u0441\u044f \u043d\u0430 \u0443\u0441\u043b\u043e\u0432\u0438\u044f\u0445 \u043b\u0438\u0446\u0435\u043d\u0437\u0438\u0438 MIT.</p>"},{"location":"ru/features/","title":"\u0412\u043e\u0437\u043c\u043e\u0436\u043d\u043e\u0441\u0442\u0438","text":""},{"location":"ru/features/#_2","title":"\u0411\u0430\u0437\u043e\u0432\u043e\u0435 \u0438\u0441\u043f\u043e\u043b\u044c\u0437\u043e\u0432\u0430\u043d\u0438\u0435","text":"<pre><code>from safe import safe\n\n@safe @ ValueError\ndef foo(a: int) -&gt; str:\n    if a &lt; 0:\n        raise ValueError\n    return f\"Hello {a} times\"\n</code></pre> <p>\u0422\u043e\u0447\u043a\u0430 \u0432\u0445\u043e\u0434\u0430 \u2013 \u0434\u0435\u043a\u043e\u0440\u0430\u0442\u043e\u0440\u0430 <code>@safe</code>, \u0434\u043b\u044f \u0443\u043a\u0430\u0437\u0430\u043d\u0438\u044f \u0442\u0438\u043f\u043e\u0432 \u0438\u0441\u043a\u043b\u044e\u0447\u0435\u043d\u0438\u0439 \u043a\u043e\u0442\u043e\u0440\u044b\u0435 \u043c\u043e\u0433\u0443\u0442 \u043f\u043e\u0440\u0430\u0436\u0430\u0442\u044c\u0441\u044f, \u0438\u0445 \u043d\u0443\u0436\u043d\u043e \u0443\u043a\u0430\u0437\u0430\u0442\u044c \u043f\u043e\u0441\u043b\u0435 <code>@</code>.</p> <p>\u0420\u0435\u0437\u0443\u043b\u044c\u0442\u0430\u0442\u043e\u043c \u0431\u0443\u0434\u0435\u0442 \u0444\u0443\u043d\u043a\u0446\u0438\u044f \u0441\u043e \u0441\u043b\u0435\u0434\u0443\u044e\u0449\u0438\u0439 \u0442\u0438\u043f\u0438\u0437\u0430\u0446\u0438\u0435\u0439:</p> <pre><code>foo(42) # -&gt; Success[str] | Failure[str, ValueError]\n</code></pre> <p>\u041f\u0440\u0435\u0434\u043f\u043e\u043b\u0430\u0433\u0430\u0435\u0442\u0441\u044f \u0434\u0430\u043b\u044c\u043d\u0435\u0438\u0448\u0430\u044f \u0440\u0430\u0431\u043e\u0442\u0430 \u0441 \u0440\u0435\u0437\u0443\u043b\u044c\u0442\u0430\u0442\u043e\u043c \u0444\u0443\u043d\u043a\u0446\u0438\u0438 \u0447\u0435\u0440\u0435\u0437 \u0443\u0442\u043e\u0447\u043d\u0435\u043d\u0438\u0435 \u0442\u0438\u043f\u0430:</p> <pre><code>from safe import Success, Failure\n\nif isinstance(result := foo(42), Success):\n    print(result.value)\nelse:\n    print(\"We has error!\", result.error)\n</code></pre>"},{"location":"ru/features/#_3","title":"\u0423\u043a\u0430\u0437\u0430\u043d\u0438\u0435 \u0438\u0441\u043a\u043b\u044e\u0447\u0435\u043d\u0438\u0439","text":"<p>\u0423\u043a\u0430\u0437\u0430\u043d\u043d\u044b\u0435 \u0438\u0441\u043a\u043b\u044e\u0447\u0435\u043d\u0438\u044f \u0431\u0443\u0434\u0443\u0442 \u0433\u0430\u0440\u0430\u043d\u0442\u0438\u0440\u043e\u0432\u0430\u043d\u043d\u043e \u043f\u0435\u0440\u0435\u0445\u0432\u0430\u0447\u0435\u043d\u044b. \u041e\u043d\u0438 \u0441\u0430\u043c\u0438 \u0438\u043b\u0438 \u0438\u0445 \u043f\u043e\u0442\u043e\u043c\u043a\u0438. \u041e\u0434\u043d\u0430\u043a\u043e, \u0442\u0438\u043f\u044b \u0438\u0441\u043a\u043b\u044e\u0447\u0435\u043d\u0438\u0439 \u043a\u043e\u0442\u043e\u0440\u044b\u0435 \u043d\u0435 \u0443\u043a\u0430\u0437\u0430\u043d\u044b \u0431\u0443\u0434\u0443\u0442 \u043f\u0435\u0440\u0435\u0445\u0432\u0430\u0447\u0435\u043d\u044b \u043d\u0435 \u0431\u0443\u0434\u0443\u0442 \u0438 \u0431\u0443\u0434\u0443\u0442 \u043f\u0440\u043e\u043f\u0443\u0449\u0435\u043d\u044b \u0432\u044b\u0448\u0435:</p> <pre><code>from safe import safe\n\n@safe @ TypeError\ndef foo():\n    raise ValueError\n\ntry:\n    result = foo()\nexcept ValueError:\n    print(\"Catch unregistered exception\")\n</code></pre> <p>\u041a\u043e\u043d\u0446\u0435\u043f\u0446\u0438\u044f \u0442\u0443\u0442 \u043f\u0440\u043e\u0441\u0442\u0430 \u2013 \u0432\u0441\u0435 \u0447\u0442\u043e \u0440\u0430\u0437\u0440\u0430\u0431\u043e\u0442\u0447\u0438\u043a \u043d\u0435 \u0443\u043a\u0430\u0437\u044b\u0432\u0430\u0435\u0442 \u043a\u0430\u043a \u0447\u0442\u043e-\u0442\u043e \u043e\u0436\u0438\u0434\u0430\u0435\u043c\u043e\u0435 \u2013 \u0442\u0430\u043a\u043e\u0432\u044b\u043c \u0438 \u044f\u0432\u043b\u044f\u0435\u0442\u0441\u044f, \u0438 \u0442\u0430\u043a\u043e\u0433\u043e \u0440\u043e\u0434\u0430 \u0438\u0441\u043a\u043b\u044e\u0447\u0435\u043d\u0438\u044f \u044d\u0442\u043e \u043d\u0435\u043f\u0440\u0435\u0434\u0432\u0438\u0434\u0435\u043d\u043d\u043e \u043f\u043e\u0432\u0435\u0434\u0435\u043d\u0438\u0435 \u043f\u0440\u043e\u0433\u0440\u0430\u043c\u043c\u044b, \u043a\u043e\u0442\u043e\u0440\u044b\u0435 \u0434\u043e\u043b\u0436\u043d\u043e \u043b\u0438\u0431\u043e \u043f\u0440\u0438\u0432\u043e\u0434\u0438\u0442\u044c \u043a \u0435\u0435 \u0437\u0430\u0432\u0435\u0440\u0448\u0435\u043d\u0438\u044e, \u043b\u0438\u0431\u043e \u043f\u0435\u0440\u0435\u0445\u0432\u0430\u0442\u044b\u0432\u0430\u0442\u044c\u0441\u044f \u043d\u0430 \u0432\u044b\u0441\u043e\u043a\u043e\u043c \u0443\u0440\u043e\u0432\u043d\u0435 \u0438 \u043f\u043e\u0434\u0430\u0432\u043b\u044f\u0442\u044c\u0441\u044f \u0435\u0441\u043b\u0438 \u0434\u0430\u043b\u044c\u043d\u0435\u0438\u0448\u0430\u044f \u0440\u0430\u0431\u043e\u0442\u0430 \u043f\u0440\u043e\u0433\u0440\u0430\u043c\u043c\u044b \u0432\u043e\u0437\u043c\u043e\u0436\u043d\u0430 \u0438\u0441\u0445\u043e\u0434\u044f \u0438\u0437 \u043e\u0448\u0438\u0431\u043a\u0438.</p>"},{"location":"ru/features/#_4","title":"\u0411\u0435\u0437 \u0443\u043a\u0430\u0437\u0430\u043d\u0438\u044f","text":"<p>\u0414\u0435\u043a\u043e\u0440\u0430\u0442\u043e\u0440 \u043c\u043e\u0436\u043d\u043e \u0438\u0441\u043f\u043e\u043b\u044c\u0437\u043e\u0432\u0430\u0442\u044c \u0431\u0435\u0437 \u0443\u043a\u0430\u0437\u0430\u043d\u0438\u044f \u0442\u0438\u043f\u043e\u0432 \u0438\u0441\u043a\u043b\u044e\u0447\u0435\u043d\u0438\u0439 \u2013 \u0432 \u0442\u0430\u043a\u043e\u043c \u0441\u043b\u0443\u0447\u0430\u0435 \u0431\u0443\u0434\u0435\u0442 \u0442\u043e\u043b\u044c\u043a\u043e \u043e\u0431\u0435\u0440\u0442\u043a\u0430 \u0440\u0435\u0437\u0443\u043b\u044c\u0442\u0430\u0442\u043e\u0432 \u0432 \u0434\u0430\u0442\u0430\u043a\u043b\u0430\u0441\u0441 <code>Success</code>.</p> <p>\u041d\u0443\u0436\u043d\u043e \u044d\u0442\u043e \u0434\u043b\u044f \u043f\u043e\u0434\u0434\u0435\u0440\u0436\u0430\u043d\u0438\u044f \u043a\u043e\u043d\u0441\u0438\u0441\u0442\u0435\u043d\u0442\u043d\u043e\u0441\u0442\u0438 \u043f\u043e\u0434\u0445\u043e\u0434\u0430 \u0432 \u043a\u043e\u0434\u0435.</p> <pre><code>from safe import safe\n\n@safe\ndef foo() -&gt; float:\n    return 3.22\n\nfoo() # -&gt; Success[float]\n</code></pre>"},{"location":"ru/features/#_5","title":"\u041c\u043d\u043e\u0436\u0435\u0441\u0442\u0432\u0435\u043d\u043d\u043e\u0435 \u0443\u043a\u0430\u0437\u0430\u043d\u0438\u0435 \u0442\u0438\u043f\u043e\u0432","text":""},{"location":"ru/features/#_6","title":"\u0427\u0435\u0440\u0435\u0437 \u043f\u0430\u0439\u043f","text":"<p>\u0422\u0438\u043f\u044b \u043c\u043e\u0436\u043d\u043e \u0443\u043a\u0430\u0437\u044b\u0432\u0430\u0442\u044c \u044f\u0432\u043d\u043e \u0447\u0435\u0440\u0435\u0437 \u043e\u043f\u0435\u0440\u0430\u0442\u043e\u0440 \u0438\u043b\u0438 <code>|</code>.</p> <pre><code>from safe import safe\n\n@safe @ KeyError | ValueError\ndef foo() -&gt; int: ...\n</code></pre>"},{"location":"ru/features/#_7","title":"\u0427\u0435\u0440\u0435\u0437 \u043f\u0435\u0440\u0435\u0434\u0430\u0447\u0443 \u043a\u043e\u043b\u043b\u0435\u043a\u0446\u0438\u0438","text":"<p>\u0422\u0430\u043a \u0436\u0435 \u043c\u043e\u0436\u043d\u043e \u0443\u043a\u0430\u0437\u044b\u0432\u0430\u0442\u044c \u043f\u0435\u0440\u0435\u0434\u0430\u0432\u0430\u044f Iterable \u0442\u0438\u043f, \u0432\u0430\u0436\u043d\u043e \u0447\u0442\u043e \u0431\u044b \u0435\u0433\u043e \u0442\u0438\u043f\u044b \u043c\u043e\u0433 \u0432\u044b\u0447\u0438\u0441\u043b\u0438\u0442\u044c \u0442\u0430\u0439\u043f-\u0447\u0435\u043a\u0435\u0440.</p> <pre><code>from safe import safe\n\nexc_types = (KeyError, ValueError, TypeError)\n\n@safe @ exc_types\ndef foo() -&gt; int: ...\n</code></pre>"},{"location":"ru/features/#_8","title":"\u0427\u0435\u0440\u0435\u0437 \u043f\u0435\u0440\u0435\u0434\u0430\u0447\u0443 \u0444\u0443\u043d\u043a\u0446\u0438\u0438","text":"<p>\u0418 \u0442\u0430\u043a \u0436\u0435 \u0443\u043a\u0430\u0437\u044b\u0432\u0430\u044f \u0437\u0430\u0434\u0435\u043a\u043e\u0440\u0438\u0440\u043e\u0432\u0430\u043d\u043d\u0443\u044e \u0434\u0435\u043a\u043e\u0440\u0430\u0442\u043e\u0440\u043e\u043c <code>@safe</code> \u0434\u0440\u0443\u0433\u0443\u044e \u0444\u0443\u043d\u043a\u0446\u0438\u044e.</p> <pre><code>from safe import safe\n\n@safe @ KeyError\ndef foo() -&gt; int: ...\n\n@safe @ foo\ndef bar() -&gt; float: ...\n</code></pre>"},{"location":"ru/features/#_9","title":"\u041a\u043e\u043c\u0431\u0438\u043d\u0438\u0440\u0443\u044f \u044d\u0442\u043e \u0432\u0441\u0435 \u0432\u043c\u0435\u0441\u0442\u0435","text":"<p>\u0418\u0441\u043f\u043e\u043b\u044c\u0437\u0443\u044f \u0438\u043b\u0438 <code>|</code> \u043c\u043e\u0436\u043d\u043e \u0432\u0441\u0435 \u044d\u0442\u043e \u0441\u043a\u043e\u043c\u0431\u0438\u043d\u0438\u0440\u043e\u0432\u0430\u0442\u044c \u043f\u0435\u0440\u0435\u0434\u0430\u0432\u0430\u044f \u043b\u044e\u0431\u043e\u0435 \u043a\u043e\u043b\u0438\u0447\u0435\u0441\u0442\u0432\u043e <code>Iterable</code> \u043a\u043e\u043b\u043b\u0435\u043a\u0446\u0438\u0439, \u044f\u0432\u043d\u044b\u0445 \u0442\u0438\u043f\u043e\u0432 \u0438 \u0434\u0440\u0443\u0433\u0438\u0445 \u0444\u0443\u043d\u043a\u0446\u0438\u0439.</p> <pre><code>from safe import safe\n\nexc_types = (ValueError, TypeError)\n\n@safe @ KeyError | exc_types\ndef foo() -&gt; int: ...\n\n@safe @ foo | IndexError\ndef bar() -&gt; int: ...\n\n@safe @ foo | bar | (AssertionError, ) | ArithmeticError\ndef zoo() -&gt; int: ...\n</code></pre> <p>\u041f\u0440\u0438\u0447\u0435\u043c \u0435\u0441\u043b\u0438 \u0432 \u043a\u043e\u043c\u0431\u0438\u043d\u0430\u0446\u0438\u0438 \u0431\u0443\u0434\u0443\u0442 \u043f\u043e\u0432\u0442\u043e\u0440\u044f\u0442\u0441\u044f \u0442\u0438\u043f\u044b, \u0442\u0438\u043f\u0438\u0437\u0430\u0446\u0438\u044f \u0431\u0443\u0434\u0435\u0442 \u0440\u0430\u0431\u043e\u0442\u0430\u0442\u044c \u043a\u043e\u0440\u0440\u0435\u043a\u0442\u043d\u043e \u0438 \u0443\u0447\u0438\u0442\u044b\u0432\u0430\u0442\u044c \u0442\u043e\u043b\u044c\u043a\u043e \u043e\u0434\u0438\u043d \u0438\u0437 \u043d\u0438\u0445.</p>"},{"location":"ru/features/#_10","title":"\u0420\u0430\u0431\u043e\u0442\u0430 \u0441 \u0440\u0435\u0437\u0443\u043b\u044c\u0442\u0430\u0442\u043e\u043c","text":""},{"location":"ru/features/#_11","title":"\u041d\u0435 \u0431\u0435\u0437\u043e\u043f\u0430\u0441\u043d\u043e\u0435 \u0438\u0441\u043f\u043e\u043b\u044c\u0437\u043e\u0432\u0430\u043d\u0438\u0435","text":"<p>\u0423 <code>Success</code> \u0438 <code>Failure</code> \u0435\u0441\u0442\u044c property <code>unsafe</code> \u2013 \u043a\u043e\u0442\u043e\u0440\u043e\u0435 \u0442\u0438\u043f\u0438\u0437\u0438\u0440\u043e\u0432\u0430\u043d\u043e \u0432 \u043e\u0431\u043e\u0438\u0445 \u0441\u043b\u0443\u0447\u0430\u044f\u0445, \u043a\u0430\u043a <code>returns_type</code> \u0444\u0443\u043d\u043a\u0446\u0438\u0438, \u043e\u0434\u043d\u0430\u043a\u043e \u043f\u0440\u0438 \u0432\u044b\u0437\u043e\u0432\u0435 \u0443 \u043f\u043e\u0441\u043b\u0435\u0434\u043d\u0435\u0433\u043e \u043f\u043e\u0434\u043d\u0438\u043c\u0430\u0435\u0442 \u043f\u0435\u0440\u0435\u0445\u0432\u0430\u0447\u0435\u043d\u043d\u0443\u044e \u043e\u0448\u0438\u0431\u043a\u0443.</p> <p>\u041f\u0440\u0438\u043c\u0435\u0440 \u043f\u0440\u0438\u043c\u0435\u043d\u0435\u043d\u0438\u044f \u2013 \u044d\u0442\u043e \u0435\u0441\u043b\u0438 \u043e\u0434\u043d\u0430 \u0431\u0435\u0437\u043e\u043f\u0430\u0441\u043d\u0430\u044f \u0444\u0443\u043d\u043a\u0446\u0438\u044f \u0432\u044b\u0437\u044b\u0432\u0430\u0435\u0442\u0441\u044f \u0432 \u0434\u0440\u0443\u0433\u043e\u0439, \u043a\u043e\u0442\u043e\u0440\u0430\u044f \u043d\u0435 \u043e\u0431\u0440\u0430\u0431\u0430\u0442\u044b\u0432\u0430\u0435\u0442 \u0435\u0435 \u0438\u0441\u043a\u043b\u044e\u0447\u0435\u043d\u0438\u0439 \u0438 \u043e\u0442\u0434\u0430\u0435\u0442 \u044d\u0442\u0443 \u043e\u0431\u044f\u0437\u0430\u043d\u043d\u043e\u0441\u0442\u044c \u0432\u044b\u0448\u0435\u0441\u0442\u043e\u044f\u0449\u0435\u043c\u0443 \u043a\u043e\u0434\u0443.</p> <pre><code>from sage import safe\n\n@safe @ ValueError\ndef foo(a: int) -&gt; str:\n    if a &lt; 0:\n        raise ValueError\n    return f\"It's {a}\"\n\n\n@safe @ foo\ndef bar(a: int) -&gt; list[str]:\n    return [foo(a).unsafe]\n</code></pre>"},{"location":"ru/features/#is_success-is_failure","title":"\u0423\u0442\u0438\u043b\u0438\u0442\u044b <code>is_success</code> \u0438 <code>is_failure</code>","text":"<p>\u0411\u0438\u0431\u043b\u0438\u043e\u0442\u0435\u043a\u0430 \u0441\u043e\u0434\u0435\u0440\u0436\u0438\u0442 \u0443\u0442\u0438\u043b\u0438\u0442\u044b <code>is_success</code> \u0438 <code>is_failure</code> \u0434\u043b\u044f \u0443\u0434\u043e\u0431\u0441\u0442\u0432\u0430 \u0440\u0430\u0431\u043e\u0442\u044b \u0438 \u0438\u0437\u0431\u0435\u0436\u0430\u043d\u0438\u044f \u043f\u0440\u043e\u0432\u0435\u0440\u043e\u043a</p> <pre><code>if isinstance(result := foo(5), Success):\n    ...\n\n\nfrom safe import is_success, is_failure\n\nif is_success(result := foo(5)):\n    ...\nelse:\n    ...\n\nif is_failure(result := foo(0)):\n    ...\nelse:\n    ...\n</code></pre> <p>\u0421\u0430\u043c\u0438 \u043e\u043d\u0438 \u044f\u0432\u043b\u044f\u044e\u0442\u0441\u044f <code>TypeGuard</code> \u043f\u0440\u043e\u0432\u0435\u0440\u043a\u043e\u0439 <code>isinstance</code>.</p>"},{"location":"ru/features/#registered","title":"\u0423\u0442\u0438\u043b\u0438\u0442\u0430 <code>registered</code>","text":"<p>\u0411\u0438\u0431\u043b\u0438\u043e\u0442\u0435\u043a\u0430 \u0441\u043e\u0434\u0435\u0440\u0436\u0438\u0442 \u0443\u0442\u0438\u043b\u0438\u0442\u0443 <code>registered</code>, \u0441 \u043f\u043e\u043c\u043e\u0449\u044c\u044e \u043a\u043e\u0442\u043e\u0440\u043e\u0439 \u043c\u043e\u0436\u043d\u043e \u043f\u043e\u043b\u0443\u0447\u0438\u0442\u044c \u0437\u0430\u0440\u0435\u0433\u0438\u0441\u0442\u0440\u0438\u0440\u043e\u0432\u0430\u043d\u043d\u044b\u0435 \u0442\u0438\u043f\u044b \u0434\u043b\u044f \u0437\u0430\u0434\u0435\u043a\u043e\u0440\u0438\u0440\u043e\u0432\u0430\u043d\u043d\u043e\u0439 \u0444\u0443\u043d\u043a\u0446\u0438\u0438.</p> <pre><code>from safe import registered, safe\n\n@safe @ ValueError | KeyError\ndef foo() -&gt; None: ...\n\nregistered(foo) # {KeyError, ValueError}\n</code></pre>"},{"location":"ru/features/#-","title":"\u041f\u0430\u0442\u0442\u0435\u0440-\u043c\u0430\u0442\u0447\u0438\u043d\u0433","text":"<p>\u0412\u0435\u0441\u044c \u043f\u043e\u0442\u0435\u043d\u0446\u0438\u0430\u043b \u043f\u043e\u0434\u0445\u043e\u0434\u0430 \u0440\u0430\u0441\u043a\u0440\u044b\u0432\u0430\u0435\u0442\u0441\u044f \u0438\u043c\u0435\u043d\u043d\u043e \u043f\u0440\u0438 \u0438\u0441\u043f\u043e\u043b\u044c\u0437\u043e\u0432\u0430\u043d\u0438\u0435 \u0432 \u0441\u0432\u044f\u0437\u043a\u0435 \u0441 <code>match case</code> \u043a\u043e\u043d\u0441\u0442\u0440\u0443\u043a\u0446\u0438\u0435\u0439:</p> <pre><code>from safe import safe, Success, Failure\n\n@safe @ ValueError | KeyError\ndef foo() -&gt; int | str: ...\n\n\nmatch foo():\n    case Success(value=int()):\n        print(\"It's int\")\n    case Success(value=str()):\n        print(\"It's str\")\n    case Failure(error=ValueError()):\n        print(\"Catch ValueError\")\n</code></pre> <p>\u041f\u043e \u043a\u043e\u0434\u0443 \u0432\u0438\u0434\u043d\u043e \u0447\u0442\u043e \u0438\u0441\u043a\u043b\u044e\u0447\u0435\u043d\u0438\u0435 <code>KeyError</code> \u043d\u0435 \u043e\u0431\u0440\u0430\u0431\u0430\u0442\u044b\u0432\u0430\u0435\u0442\u0441\u044f \u0438 \u044d\u0442\u043e \u0437\u0430\u043c\u0435\u0442\u0438\u0442 \u0442\u0430\u0439\u043f-\u0447\u0435\u043a\u0435\u0440 (pyright \u0438\u043b\u0438 mypy), \u0443\u043a\u0430\u0437\u0430\u0432 \u0432 \u043a\u043e\u0434\u0435 \u0447\u0442\u043e <code>KeyError</code> \u043e\u0436\u0438\u0434\u0430\u0435\u0442\u0441\u044f \u043e\u0431\u0440\u0430\u0431\u043e\u0442\u0430\u0442\u044c \u2013 \u043e\u0448\u0438\u0431\u043a\u0430 <code>reportMatchNotExhaustive</code>.</p> <p>\u0415\u0435 \u043c\u043e\u0436\u043d\u043e \u0440\u0435\u0448\u0438\u0442\u044c \u0434\u043e\u0431\u0430\u0432\u0438\u0432 \u0435\u0435 \u043e\u0431\u0440\u0430\u0431\u043e\u0442\u043a\u0438 \u0438\u043b\u0438 \u043f\u0440\u043e\u043f\u0443\u0441\u0442\u0438\u0432 \u043e\u0431\u044a\u0435\u0434\u0438\u043d\u0438\u0432 \u043e\u0431\u0440\u0430\u0431\u043e\u0442\u043a\u0443 \u0438\u043b\u0438 \u043f\u0435\u0440\u0435\u0434\u0430\u0432 \u0432\u044b\u0448\u0435:</p> <pre><code>match foo():\n    case Success(value=int() as value):\n        print(f\"It's int {value=}\")\n    case Success(value=str() as value):\n        print(f\"It's str {value=}\")\n    case Failure(error=ValueError()):\n        print(\"Catch ValueError\")\n    case Failure(error as error):\n        raise error\n</code></pre>"},{"location":"ru/features/#_12","title":"\u0410\u0441\u0438\u043d\u0445\u0440\u043e\u043d\u043d\u043e\u0441\u0442\u044c","text":"<p>\u0414\u043b\u044f \u0434\u0435\u043a\u043e\u0440\u0438\u0440\u043e\u0432\u0430\u043d\u0438\u044f \u043a\u043e\u0440\u0443\u0442\u0438\u043d \u043d\u0443\u0436\u043d\u043e \u0438\u0441\u043f\u043e\u043b\u044c\u0437\u043e\u0432\u0430\u0442\u044c \u043e\u0442\u0434\u0435\u043b\u044c\u043d\u044b\u0439 \u0434\u0435\u043a\u043e\u0440\u0430\u0442\u043e\u0440 \u2013 <code>@async_safe</code></p> <pre><code>from safe import async_safe\n\n\n@async_safe @ ValueError\nasync def foo(a: int) -&gt; str: ...\n\n\nfoo # (int) -&gt; Coroutine[Any, Any, Success[str] | Failure[str, ValueError]]\n</code></pre>"}]}